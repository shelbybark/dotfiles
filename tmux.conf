# Make it use C-a (the gnuscreen default shortcut)
unbind C-b
set -g prefix C-a
bind a send-prefix  # these last to allow C-a to be passed through
bind C-a send-prefix

# Unbind existing tmux key bindings, except a few that are commented out.
unbind C-o
#unbind C-z
unbind Space
unbind !
unbind '"'
unbind '#'
unbind %
unbind &
unbind "'"
unbind ,
unbind -
unbind .
unbind :
unbind =
unbind ?
unbind D
unbind '['
unbind ']'
unbind c
#unbind d
unbind f
unbind i
unbind l
unbind n
unbind o
unbind p
unbind q
unbind r
unbind s
unbind t
unbind w
unbind x
unbind '{'
unbind '}'
unbind '~'
unbind PPage
unbind Up
unbind Down
unbind Left
unbind Right
#unbind 0
#unbind 1
#unbind 2
#unbind 3
#unbind 4
#unbind 5
#unbind 6
#unbind 7
#unbind 8
#unbind 9
unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5
unbind M-n
unbind M-o
unbind M-p
unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right



### KEY BINDINGS
# first unbind, then bind: this allows on-the-fly config reloading (with C-r)
# quick tip: the '-r' flag means they can be pressed repeatedly
# note: I only added the shortcuts I use, please "man tmux" to go beyond


# basic window operations
unbind c
bind c new-window
unbind &  # purposefully diffcult combination, better the shell's "C-d", or kill-pane
bind & confirm-before kill-window 
unbind x  # close pane (if last also the window)
bind x confirm-before kill-pane

# window cycling "<" or "," for previous window
unbind ,
bind -r , previous-window
unbind <
bind -r < previous-window
unbind Left
bind -r Left previous-window

# ">" or "." for next window
unbind .
bind -r . next-window
unbind >
bind -r > next-window
unbind Right
bind -r Right next-window


# find a window by name
unbind f
bind f command-prompt "find-window '%%'"

# rename a window (gnuscreen default shortcut)
unbind A
bind A command-prompt "rename-window %%"

# backspace for last active window
unbind Tab
bind -r Tab last-window

# last active window like screen
bind-key C-a last-window


# window picker
unbind w
bind w choose-window


# add split side-by-side
unbind |
bind -r | split-window -h -c "#{pane_current_path}"

# add split top-bottom
unbind _ 
bind -r _ split-window -v -c "#{pane_current_path}"

# swap panes
unbind {
bind -r { swap-pane -U
unbind }
bind -r } swap-pane -D

# number panes visibly
unbind q
bind q display-panes

# cycle through pane layouts
unbind Space
bind -r Space next-layout

# change pane focus (like vi cursor movement)
unbind k
bind -r k select-pane -U
#bind k select-pane -D\; resize-pane -Z\; select-pane -D\; resize-pane -Z
unbind j
bind -r j select-pane -D
#bind j select-pane -D\; resize-pane -Z\; select-pane -D\; resize-pane -Z
unbind h
bind -r h select-pane -L
#bind h select-pane -D\; resize-pane -Z\; select-pane -D\; resize-pane -Z
unbind l
bind -r l select-pane -R
#bind l select-pane -D\; resize-pane -Z\; select-pane -D\; resize-pane -Z

# resize pane
unbind '('
bind -r '(' resize-pane -L 4
unbind ')'
bind -r ')' resize-pane -R 4
unbind +
bind -r + resize-pane -U 2
unbind -
bind -r - resize-pane -D 2


# command line
unbind :
bind : command-prompt


# display key bindings
unbind ?
bind ? list-keys


# copy and scroll mode (see "man tmux"), and paste
unbind [
bind [ copy-mode
unbind ]
bind -r ] paste-buffer -s \015  # sadly '-r' doesnt work here, hopefully one day it does
unbind PPage
bind PPage copy-mode -u  # to copymode and one page up (pgup/dn passed on)


# apply the config file again...
unbind r
#bind r source-file /etc/tmux.conf

# page up and down
#   --> this has to be done for the shell, vi aparently works well.


# TODO:
# * keybindings for detaching/attaching
# * for session/client/buffer management
# * for buffer filling and pasting
# * mouse scroll fix
# * mouse click focus
# * alt-tab style feature request
# * select+move splitters (need splitter highlighting)
# * quake style "toggle terminal from above", bound to "~"


# its not logic to have the most left 'tab' on the very right of the key strip
set -g base-index 0

# should fix scrolling issues (with shift pgup/dn)
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# some general config options
#set -g default-terminal "screen-256color"
#set -g default-terminal "screen-color"

# Add truecolor support
#set-option -ga terminal-overrides ",xterm-256color:Tc"
#set-option -ga terminal-overrides ",*256col*:Tc"

# Default terminal is 256 colors
#set -g default-terminal "screen-256color"
#set -g default-terminal "tmux-256color"

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"

set -g history-limit 10000
set -g repeat-time 300

#set -g status on
set -g status-keys vi

set -g bell-action any
set -g visual-bell on
#set -g visual-bell off
set -g visual-activity on
#set -g visual-content on
set -g message-bg black
set -g message-fg green
setw -g mode-keys vi
#setw -g mode-mouse off  # on prevents mouse select on the terminal
#set -g mouse-select-pane off  # on prevents mouse select in panes
#setw -g utf8 on
#set-option -g -q mouse on
set -g utf8
set-window-option -g utf8 on

# Clock mode
set-window-option -g clock-mode-colour cyan
#set-window-option -g clock-mode-style 24
set-window-option -g clock-mode-style 12


# window title
set -g set-titles on
setw -g automatic-rename on


## Status Bar ##
set-option -g status-utf8 on
#set-option -g status-justify centre
set-option -g status-justify right
set-option -g status-justify left
#set-option -g status-bg black
#
## THIS ONE
#set-option -g status-bg '#669000'
set-option -g status-bg '#222222'
#
#set-option -g status-fg cyan
#set-option -g status-fg '#bfd38a'
set-option -g status-fg '#666666'
#set-option -g status-left-length 10
set-option -g status-left-length 20

set-option -g pane-active-border-fg '#669000'
set-option -g pane-active-border-bg '#222222'
#set-option -g pane-border-fg white
#set-option -g pane-border-fg black
#set-option -g pane-border-bg black
set-option -g pane-border-fg '#222222'
set-option -g pane-border-bg '#222222'

## THIS ONE
#set-option -g message-bg green
set-option -g message-bg '#007bb3'
set-option -g message-fg '#ffffff'

setw -g mode-bg default

setw -g window-status-format '#I#F#W '
setw -g window-status-current-format ' #I#F#W '

#setw -g window-status-bg black
#
## THIS ONE
#setw -g window-status-bg '#669000'
#
#setw -g window-status-current-fg '#5ea9c2'
setw -g window-status-current-fg '#888888'
#setw -g window-status-current-bg cyan
#setw -g window-status-current-bg black

setw -g window-status-current-bg black
#setw -g window-status-alert-attr default
#setw -g window-status-alert-fg yellow

# color for windows with flags (activity, etc)
#setw -g window-status-alert-attr none
#setw -g window-status-alert-fg default
#setw -g window-status-alert-bg red


#set -g status-left '#[fg=cyan]tmux: #[fg=green][#[default]'
# DEFAULT LAYOUT
#set -g status-left '#[fg=white]tmux: #[fg=green][#[default]'
#set -g status-left '#[fg=white]macbook:  #[fg=green][#[default]'
set -g status-left "#[fg=white]macbook: #[fg=cyan]#(ipconfig getifaddr en1)#(ipconfig getifaddr en0) #[fg=white]| #[fg=brightblue]#(curl icanhazip.com) #[fg=green][#[default]"

#set -g status-left '["

#set -g status-left '#[fg=cyan]tmux: #H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# DEFAULT LAYOUT
#set -g status-right '#[fg=green]][ #[fg=white]%a %m/%d/%y #[fg=white]%I:%M %p #[fg=green]][ #[fg=white]#(tail /tmp/temperature)° F #[fg=green]][ #[fg=white]#(~/.dotfiles/battery.sh Discharging; ~/.dotfiles/battery.sh Charging) #[fg=green]]#[default]'
#set -g status-right ''

#set -g status-right '#[fg=green]][ #[fg=cyan]%a %m/%d/%y #[fg=white]%I:%M %p #[fg=green]][ #[fg=white]#(~/.dotfiles/battery.sh Discharging; ~/.dotfiles/battery.sh Charging) #[fg=green]]#[default]'
# OFF WHILE OS X EL CAPITAN PROBLEM HAPPENING
#set -g status-right '#[fg=green]][ #[fg=cyan]%a %m/%d/%y #[fg=white]%I:%M %p #[fg=green]][ #[fg=white]#(tail /tmp/temperature) #[fg=green]][ #[fg=white]#(~/bin/battery Discharging; ~/bin/battery Charging) #[fg=green]]#[default]'
#set -g status-right '#[fg=green]][ #[fg=cyan]%a %m/%d/%y #[fg=white]%I:%M %p #[fg=green]][ #[fg=white]#(tail /tmp/temperature) #[fg=green]][ #[fg=white]#(battery-simple) #[fg=green]]#[default]'
set -g status-right '#[fg=green]][ #[fg=cyan]%a %m/%d/%y #[fg=white]%I:%M %p #[fg=green]][ #[fg=white]#(tail /tmp/temperature) #[fg=green]][ #[fg=white]#(battcheck) #[fg=green]]#[default]'
#set -g status-right '#[fg=green]]'
#set -g status-right "$(~/bin/battery Discharging; ~/bin/battery Charging) | %e %B %R"
#set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
# $(~/bin/battery Discharging; ~/bin/battery Charging) | %e %B %R

## status bar
#set -g status-utf8 on
#set -g status-justify centre
#set -g status-bg black
#set -g status-fg green
#set -g status-interval 5
#set -g status-left-length 30
#set -g status-left ''
#set -g status-right '#[fg=blue,bold]#H#[default] #[fg=green]» #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=green]» #[fg=cyan]#S#[default] #[fg=green]» #[fg=red]#(acpi | cut -d "," -f 2 | sed "s/^ *//g") #[fg=green]» #[fg=magenta]%R#[default]'
#set -g status-right '#[fg=blue,bold]#H#[default] #[fg=green]» #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=green]» #[fg=cyan]#S#[default] #[fg=green]» #[fg=red]#(acpi | cut -d "," -f 2 | sed "s/^ *//g") #[fg=green]» #[fg=magenta]%R#[default]'
#setw -g monitor-activity on
#setw -g window-status-current-bg red
#setw -g window-status-current-fg black
#set -g status-right-length 50
set -g history-limit 4096

# `+r reloads the configuration, handy
bind r source-file ~/.tmux.conf

# Powerline settings
#source '/Users/shelbybark/.dotfiles/powerline/powerline/bindings/tmux/powerline.conf'
set-option -g status on
# OFF WHILE OS X EL CAPITAN PROBLEM HAPPENING
set-option -g status-interval 2
#set-option -g status-interval 0
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
# OFF WHILE OS X EL CAPITAN PROBLEM HAPPENING
set-option -g status-right-length 90
#set-option -g status-right-length 1
#set-option -g status-right-length 90
# set-option -g status-left "#(~/.dotfiles/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.dotfiles/tmux-powerline/powerline.sh right)"
#set-option -g status-left "#(~/.dotfiles/tmux-powerline/mute_powerline.sh left)"
#set-option -g status-right "#(~/.dotfiles/tmux-powerline/mute_powerline.sh right)"
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


# bind-key C-[ run '~/.dotfiles/tmux-powerline/mute_powerline.sh left'
# bind-key C-] run '~/.dotfiles/tmux-powerline/mute_powerline.sh right'
#set-option -sg escape-time 10
set -sg escape-time 0

#set-option -g default-shell /bin/zsh
set-option -g default-shell /usr/local/bin/bash
set -g default-command "/usr/local/bin/bash -l"
#
# resurrect settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

# continuum settings
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'iterm,fullscreen'

run-shell ~/Documents/gitapps/tmux-continuum/continuum.tmux
run-shell -b ~/Documents/gitapps/tmux-continuum/scripts/continuum_restore.sh
run-shell ~/Documents/gitapps/tmux-resurrect/resurrect.tmux



